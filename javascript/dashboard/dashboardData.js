function dFilterArray(a) { function b(a, b) { for (var c = [], d = 0; b > d; d++) c.push(a); return c } var c = { result: b, val: "Price", periods: 13, vProperty: "values", vDynamic: !0, vArray: !0 }, d = dFilterBase(extend(c, a)), e = d.options; return d.init = function () { return d }, d.getValues = function (a) { return { id: a.id, key: a.obj, filter: a.filter, value: d.getPopulation(a.filter).value.reduce(d.keyReduce(a.filter), e.result(0, e.periods)) } }, d.keyReduce = function (a) { return function (b, c) { var f = d.vSelect(d.vAccessor(c), a, e.tgt); return f && d.vSum(b, f), b } }, d.init(e) } function dFilterBase(a) { var b = { all: "_", fn: "fn", result: function () { return 0 }, tgt: "mre", val: "Price", data: [], vProperty: null, vDynamic: null, vArray: null, pNested: null, mreInDim: !1 }, c = {}, d = c.options = extend(b, a), e = c.filter = {}; return c.vAccessor = function (a) { return a }, c.vSelect = function (a) { return a }, c.vSum = function (a, b) { return a += b }, c.skip = function (a) { return a === d.all }, c.pAccessor = function (a, b) { return a[b] }, c.init = function () { return c.indexes = {}, c.dims = {}, d.dims.forEach(function (a, b) { c.indexes[a] = { range: [] }, c.dims[a] = { val: b }, c.dims[b] = { val: a } }), d.data.forEach(function (a, b) { d.dimsToAdd && d.dimsToAdd.forEach(function (b) { a[b.name] = b.grpFn(wlk(a, b.derivedFrom)) }), d.dims.forEach(function (d) { var e = c.pAccessor(a, d); c.indexes[d][e] || (c.indexes[d][e] = { length: 0, ref: {} }, c.indexes[d].range.push(e)), c.indexes[d][e].ref[b] = 1, c.indexes[d][e].length++ }) }), null !== d.vProperty && (c.vAccessor = function (a) { return a[d.vProperty] }), null !== d.vDynamic && (c.vSelect = function (a, b, c) { return a[b[c]] }), null !== d.vArray && (c.vSum = function (a, b) { for (var c = 0; c < a.length; c++) a[c] += b[c]; return a }), null !== d.pNested && (c.pAccessor = function (a, b) { return wlk(a, b) }), d.mreInDim === !1 && (c.skip = function (a, b) { return a === d.all || b === d.tgt }), e.population = d.data, e.indexes = {}, e.aggregate = {}, c }, c.objInKey = function (a, b) { res = !0; for (var d in b) { var e = b[d]; if (c.skip(e, d) === !1) { var f = c.pAccessor(a, d); if ("object" == typeof e) e.fn && (res = e.fn(f)); else { if (!f) return !1; res = f === e || +f === +e } } if (res === !1) return !1 } return !0 }, c.filterData = function (a) { var b = [], e = {}; for (var f in a) c.indexes[f][a[f]] ? b.push(c.indexes[f][a[f]]) : c.skip(a[f], f) === !1 && (e[f] = a[f]); if (0 === b.length) return d.data; b.sort(function (a, b) { a.length < b.length }); var g = Object.keys(b[0].ref); return b.slice(1).forEach(function (a) { g = g.filter(function (b) { return a.ref[b] }) }), g.map(function (a) { return d.data[a] }).filter(c.kFilter(e)) }, c.getValues = function (a) { var b = c.getPopulation(a.filter).value.reduce(c.keyReduce(a.filter), []); return { id: a.id, key: a.obj, filter: a.filter, value: b.stats() } }, c.getPopulation = function (a) { return { key: a, value: c.filterData(a) } }, c.kFilter = function (a) { return function (b) { return c.objInKey(b, a) } }, c.keyReduce = function () { return function (a, b) { return b[d.val] && a.push(b[d.val]), a } }, c.range = function (a) { return console.log(a), c.indexes[a].range }, c.xFilter = function (a, b) { var f = c.getFilterPopulation(a, b); e.population = f || d.data, c.inflateFilter(e), c.updateFilter() }, c.getFilterPopulation = function (a, b) { return e.indexes[a][b] }, c.inflateFilter = function (a) { var b, c = {}; d.dims.forEach(function (a) { b[a] = {}, c[a] = { range: [] }, d.mreToAgg.forEach(function (d) { b[a][d] = { sum: 0, count: 0 }, c[a][d] = { length: 0, ref: {} } }) }), a.aggregate = b, a.indexes = c }, c.updateFilter = function () { e.population.forEach(function (a) { d.dims.forEach(function (b) { var f = c.pAccessor(d.data[a], b); e.indexes[b][f].ref[a] = 1, e.indexes[b][f].length++, d.mreToAgg.forEach(function (c) { e.aggregate[b][c].sum += d.data[a][c] }) }) }) }, c.init(d) } function grpRanges(a, b, c) { return function (d) { for (var e = 0; e < a.length; e++) if (d < a[e] && c && d === a[e]) return ++e; return b || e + 1 } } function grpCategories(a, b) { return function (c) { return c in a ? a[c] : b || 0 } } function dProvider(a) { function b(a, b) { var c = a.split("|"); return c[d.dims[j.tgt].val] = b, c.join("|") } var c = { all: "_", fn: "fn", result: function () { return 0 }, src: [], dims: [], tgt: "mre" }, d = { cache: {}, calc: {}, srcId: { _: 0 }, src: [], options: {} }, e = d.cache, g = d.calc, h = d.srcId, i = d.src, j = d.options; j = extend(c, a), d.init = function () { return d.dims = {}, j.dims = ["src"].concat(j.dims), j.dims.forEach(function (a, b) { d.dims[a] = { val: b }, d.dims[b] = { val: a } }), j.src.forEach(function (a, b) { i.push(a.data || a), h[a.id || b] = b }), j.cache && (e = j.cache), d }, d.segment = function (a) { var b = d.extKey(a), c = d.segmentFromCache(b); return c }, d.extKey = function (a) { var b = [], c = {}; a.src || (a.src = "_"); for (var e = 0; e < j.dims.length; e++) b.push(j.all); for (var g in a) if (d.dims[g]) { var h = f(a[g]); h !== j.all && (c[g] = h), b[d.dims[g].val] = h.label || h } else g.indexOf(j.fn) < 1 && "src" !== g && console.log("Invalid key: " + g); return { obj: a, id: b.join("|"), filter: c } }, d.segmentFromCache = function (a) { return e[a.id] ? e[a.id] : d.fillCache(a) }, d.fillCache = function (a) { var b, c = a.obj, e = a.id, f = h[a.obj.src || "_"]; return c.xfn ? c.xfn.fn ? g[c.xfn.fn] && (b = g[c.xfn.fn](a)) : g[c.xfn] ? b = g[c.xfn](a) : console.log("Error - transform function not logged") : b = d.src[f].getValues(a), d.cacheOut(e, c, b.value) }, d.cacheOut = function (a, b, c) { return e[a] = c }, d.fillCacheFromObject = function (a, c, d) { for (var f in d) if (has(d, f)) { var g = b(a, f); e[g] = d[f] } return e[a] }, d.getPopulation = function (a) { var b = h[a.src || "_"]; return i[b].getPopulation(a) }; var k = function (a) { return function (b) { var c = $.extend({}, b.obj[a]), e = $.extend({}, b.obj, c.args[0]); delete e[a]; for (var f = $.extend({}, e, c.args[1]), g = d.segment(e), h = d.segment(f), i = [], j = 0; j < g.length; j++) i.push(0 === h[j] ? 0 : g[j] / h[j]); return { id: b.id, obj: b.obj, value: i } } }; return g.ofTotal = k("xfn"), d.xFilter = function (a, b) { if (!a) return resetFilters(); key.src || (key.src = "_"); var c, e = (d.extKey(key), mergeWithActive(a, b)); c = (b = "_") ? d.getPopulation(e) : d.filter(e), sumDimensionAndUpdateCache() }, d.init(j) } function periodsCreate(a, b) { for (var c = {}, d = [], e = {}, f = Math.round(a / 100), g = a % 100, h = 0; b > h; h++) d[h] = 100 * f + g, e[d[h]] = h, ++g > 12 && (f++, g = 1); return c.mth = d, c.ndx = e, c } function dProviderArray(a) { var b = {}, c = dProvider(extend(b, a)), d = (c.cache, c.calc, c.srcId), e = (c.src, c.options); return c.init = function () { return c }, c.segment = function (a, b) { var d, e, g = c.extKey(a), h = c.segmentFromCache(g), i = b; return i && (d = i[0] || i, d = f(d), e = i[1] || d + 1, e = f(e), d > e && (0 > e ? (d += e + 1, e = d - e) : e += d)), b ? h.slice(d, e) : h }, c.segmentSubAnalyse = function (a, b, e) { var f = [], g = $.extend(!0, {}, a), h = d[a.src || "_"]; return c.src[h].range(e).forEach(function (a) { g[e] = a, f.push({ key: displayNames[e][a] || a, values: c.segment(g, b).map(function (a, b) { return { x: pouDisplay(b, "shortmonths"), y: a } }) }) }), f }, c.init(e) } function jdcGrid(a) { function b() { for (var a = h.options, b = a.def, d = "", e = "", f = 0; f < b.rows.length; f++) { e = ""; for (var g = 0; g < b.cols.length; g++) { var i = {}; i.ref = b.name + "_r" + f + "c" + g, i.css = b.cols[g].css || b.rows[f].css || a.cell.css || a.css.cell, a[i.css] || (i.css = a.cell.css || a.css.cell), i.value = "", 0 === g ? (i.value = b.rows[f].display, i.css = b.cols[0].css) : 0 === f ? (i.value = b.cols[g].display, i.css = b.cols[0].css, i.css += " header") : "blank" === b.rows[f].css || "blank" === b.cols[g].css ? (i.css = "blank", i.value = " ") : (i.key = {}, $.extend(i.key, b.key, b.rows[f].key, b.cols[g].key), i.formula = b.cols[g].type, i.index = b.cols[g].index || b.rows[f].index || a[i.css].index, i.type = b.cols[g].type || b.rows[f].type || a[i.css].type, i.format = b.cols[g].format || b.rows[f].format || a[i.css].format, i.chartType = b.cols[g].chartType || b.rows[f].chartType || a[i.css].chartType, i.series = c, i.style = b.cols[g].style || b.rows[f].style || a[i.css].style), e = e += "<td id='" + i.ref + "' class='" + i.css + "' style='" + i.style + "'>" + i.value + "</td>", h.cells.push(i), h.cellsByRef[i.ref] = i } d += "<tr id='r" + f + "' class='" + a.css.row + "'>" + e + "</tr>" } h.table = "<table id='" + b.name + "' class='" + a.css.table + "'>" + d + "</table>", $("#" + b.container).html(h.table); var j = b.eventHandlers; if (j) for (k in j) for (l in j[k]) d3.selectAll("#" + b.name + " " + k).on(l, j[k][l]) } function c() { for (var a = [], b = 0; b < this.data.length; b++) a.push({ x: b + 1, y: this.data[b], z: periods.mth[def.c() - this.data.length + 1] }); return a } function d() { for (var a = [], b = 0; b < h.cells.length; b++) { var c = h.cells[b]; c.key && (console.log(c.key), c.data = c.format(c.type(h.options.source.segment(c.key, c.index))), console.log(c.data), a.push({ id: c.ref, val: c.data })) } return a } function e() { function a(a) { var b; return nv.addGraph(function () { return b = a.chartType().showValue(!1).margin({ top: 1, right: 20, bottom: 1, left: 20 }).width(250).height(30), b.xTickFormat(function (a) { return a }), b.yTickFormat(function (a) { return fmt(",.1f", "m")(a) }), d3.select("#" + a.ref).append("svg").attr("id", a.ref).attr("height", 28), d3.select("svg#" + a.ref).datum(a.series()).transition().duration(200).call(b), nv.utils.windowResize(b.update), b }), { graph: b, update: function (a) { d3.select("svg#" + a.ref).datum(a.series()).transition().duration(200).call(b) } } } d3.selectAll(".sparkline").attr("width", 290).attr("height", 35); for (var b = 0; b < h.cells.length; b++) { var c = h.cells[b]; "sparkline" === c.css && (c.chart ? c.chart.update(c) : c.chart = a(c)) } } function g() { var a = d(); d3.selectAll(".cell").data(a, function (a) { return a ? a.id : this.id }).transition().duration(500).style("opacity", function () { return .25 }).transition().duration(500).style("opacity", function () { return 1 }).text(function (a) { return a.val }) } var h = {}, i = { css: { table: "table table-default", row: "", cell: "cell" }, header: { css: "strong" }, cell: { type: sum, format: rptFmt, index: def.c, style: "" }, sparkline: { type: function (a) { return a }, format: function (a) { return a }, index: [def.c, -13], chartType: nv.models.sparklinePlus, style: "" } }; return h.cells = [], h.cellsByRef = {}, h.table = "", h.cells.display = function () { for (var a = "", b = 0; b < h.cells.length; b++) { var c = h.cells[b]; a += "Ref: " + c.ref + " Index " + f(c.index) + " Key: { "; for (k in c.key) a += k + ": " + f(c.key[k]) + ", "; a += "}\n" } return a }, h.init = function (a) { var b = i; for (var c in a) a.hasOwnProperty(c) && (b[c] = a[c]); var d = h.options = b; return h.populated = !1, h.source = d.source, h }, h.update = function () { h.populated === !1 && (b(), h.populated = !0), g(), e() }, h.init(a) } function reportDefaults(a, b) { var c = {}; return c.e = function () { return state.entity() }, c.p = function () { return state.portfolio() }, c.u = function () { return state.uom() }, c.c = function () { return a }, c.l = function () { return a - 1 }, c.ly = function () { return a - 12 }, c.ytd = function () { return b }, c } function measureExtended(a, b) { return function () { return f(a) + b } } function xfFilter(a, b, c) { return function () { return { key: a, label: b, fn: c } } } function ofTotalHelper(a, b, c, d) { var e = { uom: measureExtended(d || def.u, b) }, f = { xfn: { fn: "ofTotal", args: c } }; return $.extend({}, a, e, f) } function cellClicked() { var a = rpts[this.id.split("_")[0]], b = a.cellsByRef[this.id]; return $("#myModalLabel").html(displayFilters(b.key, !1)), popupChart = createPopupChart("#popupChartBS svg", b, a), $("#myModal").modal({ backdrop: !1, keyboard: !0, show: !0 }), !1 } function createPopupChart(a, b, c) { var d = {}; return d3.select(a + " svg").remove(), d3.select(a).append("svg"), nv.addGraph(function () { d.chart = nv.models.multiBarChart().stacked(!0).margin({ top: 30, right: 30, bottom: 30, left: 70 }), d.key = b.key, d.source = c.source; var e = c.source.segment(b.key, [0, def.c() + 1]).map(function (a, b) { return { x: pouDisplay(b, "shortmonths"), y: a } }), g = (e.map(function (a) { return { x: a.x, y: a.y / 2 } }), [{ key: f(d.key.mre), values: e }]), h = (g.length, 0), i = 0; g[0].values.forEach(function (a, b) { var c = 0, d = 0; g.forEach(function (a, e) { var f = 0, j = g[e].values[b].y; 0 > j ? (f = d, d += j) : (f = c, c += j), h = Math.max(h, c), i = Math.min(i, d) }) }), d.chart.yAxis.tickFormat(scaleNumberFormat(Math.max(Math.abs(i), Math.abs(h)))), d3.select(a + " svg").datum(g).transition().duration(200).call(d.chart), nv.utils.windowResize(d.chart.update) }), { graph: d, update: function (a) { d3.select("#popupChartBS svg").datum(a).transition().duration(200).call(d.chart) } } } function pouDisplay(a, b) { var c = periods.mth[a], d = c % 100, e = parseInt(c / 100); return utilsValues[b][d - 1] + "-" + (e - 2e3) } function updatePopupChart(a) { var b = popupChart.graph, c = dataDims[a]; console.log("updatePopupChart " + a); var d = pxf.segmentSubAnalyse(b.key, [0, def.c() + 1], c); popupChart.update(d) } function stateManager(a, b) { var c = { anchorMgr: null, data: null, initData: function (a) { c.data = a }, resetData: function (a) { c.data = a }, controls: [], addControl: function (a, b, d, e, f, g) { if (c[a]) return -1; var h = c.controls.push(g || 0) - 1; return c[a] = e(c, h, b), c.stateHandlers.push(f(c, a, h)), c.anchorMgr.addAnchorMapSchema(a, d), h }, addHandler: function (a, b) { return c.stateHandlers.push(b(c, a)) - 1 }, stateHandlers: [], updated: 0, updateStateControls: function () { for (var a = 0; a < c.stateHandlers.length; a++) c.stateHandlers[a]() }, views: {}, addView: function (a, b) { return c.views[b] || (c.views[b] = []), c.views[b].push(a) - 1 }, viewActive: 0, updateViews: function () { c.views[c.viewActive] && c.views[c.viewActive].forEach(function (a) { a.update() }) }, update: function () { c.updateStateControls(), c.updateViews() } }; return c.anchorMgr = a, c.data = b, c.anchorMgr.addStateManager(c), c } function stateProperty(a, b, c) { return function (d) { return void 0 !== d && d !== a.controls[b] && (a.controls[b] = d, a.updated = b), c[a.controls[b]] } } function stateBtnHandler(a, b) { return function () { var c = {}; return c[a] = this.value, b.changeAnchorPart(c), !1 } } function updateButtonState(a, b, c) { return function () { $("." + b + " button").removeClass("active"), $("." + b + " button[value=" + a.controls[c] + "]").addClass("active") } } function reportChange(a) { return function (b, c) { return function () { b.updated === c && (b.viewActive = b.controls[c], $("#" + a + " .activeTab").fadeOut("fast", function () { $("#" + a + " div[id=" + a + b.controls[c] + "]").fadeIn("slow").removeClass("inActiveTab").addClass("activeTab") }).removeClass("activeTab").addClass("inActiveTab")) } } } function stateElement(a, b, c, d, e, f) { var g, h = {}, i = {}, j = [], k = a || state; return j = d.map(function (a, b) { return h[b] = e ? e[b] : a, i[b] = !0, { name: a, value: b } }), createButtonSet("." + b, j, c, { click: stateBtnHandler(b, a.anchorMgr) }), g = k.addControl(b, h, i, stateProperty, updateButtonState, 0), f && f.forEach(function (b) { a.addHandler(g, b) }), g } function ƒ(a) { var b, c = Array.prototype.slice.call(arguments, 1); return function (d) { return "function" == typeof (b = d[a]) ? b.apply(d, c) : b } } function I(a) { return a } function wlk(a, b, c) { for (var d = a, e = c || ".", f = b.split(e), g = 0; g < f.length; g++) { if (!has(d, f[g])) return null; d = d[f[g]] } return d } function has(a, b) { return Object.prototype.hasOwnProperty.call(a, b) } function fillArray(a, b) { var c = [], d = a || 1; v = b || 0; for (var e = 0; d > e; e++) c.push(v); return c } function extend(a, b) { for (var c in b) b.hasOwnProperty(c) && (a[c] = b[c]); return a } function fmt(a, b, c) { var d = d3.format(a); return c && 0 !== c || (c = 1e6), function (a) { return d(a / c).replace("-", "(") + (0 > a ? ")" : " ") + b } } function scaleNumberFormat(a) { return 3 > a ? fp : 3e3 > a ? fd : 3e6 > a ? fc : 3e9 > a ? fv : fmt(",.1f", "b", 1e9) } function rptFmt(a) { var b = Math.abs(a); return 2 > b ? fp(a) : 1e5 > b ? fd(a) : 2e6 > b ? fc(a) : fv(a) } function rptFmt2(a) { return 1 > a ? fp(a) : 900 > a ? fd(a) : 9e5 > a ? fc(a) : 9e8 > a ? fv(a) : fmt(",.1f", "bn", 1e9)(a) } function highlight() { var a = d3.select(this); return stateUpdate(a, "class", "active", !0), !1 } function unhighlight() { var a = d3.select(this); return stateUpdate(a, "class", "active", !1), !1 } function stateUpdate(a, b, c, d) { a.each(function () { var a = d3.select(this); attrUpdate(a, b, c, d) }) } function attrUpdate(a, b, c, d) { d ? a.attr(b, function () { return (a.attr(b) || "").trim() + " " + c }) : a.attr(b, function () { return a.attr(b).replace(c, "").trim() }) } var timer = function () { var a = {}; return a.timings = {}, a.startIteration = function (b) { a.timings[b || "_"].start = Date.now() }, a.endIteration = function (b) { a.timings[b || "_"].time += Date.now() - a.tStart[b || "_"].start }, a }, periods = periodsCreate(201201, 36); console.log(periods); var utilsValues = { shortmonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], monthsletters: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"], fullmonths: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], shortdays: ["M", "T", "W", "T", "F", "S", "S"], fulldays: ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"] }, displayNames = { mre: { Bal: "Balance", Cre: "Cure", Flw: "Flow", Prv: "Provision", BalChg: "Balance Movement", BlD: "Balance Movement", CrD: "Cure from Default", FlD: "Default Flow" }, ent: { A: "AMU", N: "Non-core", P: "ptsb" }, prd: { _: "Mortgage" }, prt: { BTL: "BTL", PDH: "PDH" }, arr: { 0: "Closed", 10: "UTD", 20: "0-30", 30: "30-60", 40: "60-90", 50: "90 plus", 60: "180 plus", 70: "Repo", 80: "Shortfall" }, npl: { N: "Performing", Y: "Non-performing" }, prv_cat: { 0: "Performing", 10: "Performing", 20: "Prior Default", 25: "Prior forborne", 30: "LT forbearance", 40: "ST forbearance", 45: "ST Multiple", 50: "Default", 53: "ST>12mths", 55: "Hold", 60: "Split", 65: "Re-default", 70: "Individual", 71: "CRE Related", 72: "Cross-default", 73: "RIP I/O", 75: "Legal Closure", 77: "AVS", 78: "Expired", 80: "Repossession", 85: "PIA", 90: "Shortfall" }, fb: { CL: "Closure", LT: "Long-term", NO: "None", ST: "Short-term" }, fbt: { A: "AVS", AS: "AVS-Sold", C: "Cap", IO: "IO", IP: "IOplus", LT: "LT_Trial", NO: "NO", PR: "PMT_Red", R: "Repo", RS: "Repo-Sold", S: "Split", T: "TE" }, uom: { E: "Value", "#": "Volume" }, pou: { 201201: "201201", 201202: "201202", 201203: "201203", 201204: "201204", 201205: "201205", 201206: "201206", 201207: "201207", 201208: "201208", 201209: "201209", 201210: "201210", 201211: "201211", 201212: "201212", 201301: "201301", 201302: "201302", 201303: "201303", 201304: "201304", 201305: "201305", 201306: "201306", 201307: "201307", 201308: "201308", 201309: "201309", 201310: "201310" } }, def = reportDefaults(34, -11), OfTotal = measureExtended(def.u, "OfTotal"); inFB = function (a) { return "NO" !== a }; var popupChart, anchorManager = function () { function a() { return $.extend(!0, {}, c) } var b = {}, c = {}, d = {}; return b.stateManagers = [], b.stateChanged = [], b.addStateManager = function (a) { var c = b.stateManagers.push(a) - 1; return b.stateChanged[c] = !1, c }, b.changeAnchorPart = function (b) { var d, e, f = a(), g = !0; a: for (d in b) if (b.hasOwnProperty(d)) { if (0 === d.indexOf("_")) continue a; f[d] = b[d], e = "_" + d, b[e] ? f[e] = b[e] : (delete f[e], delete f["_s" + e]) } try { $.uriAnchor.setAnchor(f) } catch (h) { $.uriAnchor.setAnchor(c, null, !0), g = !1 } return g }, b.onHashchange = function () { var d, e = a(); try { d = $.uriAnchor.makeAnchorMap() } catch (f) { return $.uriAnchor.setAnchor(e, null, !0), !1 } c = d; for (k in d) e && e[k] === d[k] || -1 === k.indexOf("s_") && b.stateManagers.forEach(function (a, c) { k in a && (a[k](d[k]), b.stateChanged[c] = !0) }); return b.stateChanged.forEach(function (a, c) { a === !0 && (b.stateManagers[c].update(), a = !1) }), !1 }, b.addAnchorMapSchema = function (a, b) { d[a] || (d[a] = b) }, b.init = function () { return $.uriAnchor.configModule({ schema_map: d }), b }, b.init() }, createButtonSet = function (a, b, c, d) { var b = d3.selectAll(a).selectAll("button").data(b).enter().append("button").attr("class", c).attr("value", ƒ("value")).html(ƒ("name")).on("click", d.click) }; String.prototype.trim = function () { return this.replace(/^\s+|\s+$/, "") }; var f = function (a) { return "function" == typeof a ? a() : a }, sum = function (a) { return a.reduce(function (a, b) { return a + b }) }, fv = fmt(",.1f", "m", 1e6), fc = fmt(",.1f", "k", 1e3), fd = fmt(",.0f", "", 1), fp = fmt(",.1%", "", 1), fb = fmt(",.1f", "bn", 1e9);


var payLoad = function () {
    var key, result = [];
    var dims = ["ent", "prd", "prt", "arr", "npl", "prv_cat", "fb", "fbt", "uom"];

    var data = (function () {
        var temp = null;
        $.ajax({
            type: "GET",
            url: "ReportsData.svc/JSON/dashboard",
            data: "{}",
            async: false,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (msg) {
                temp = JSON.parse(msg);
            }
        })
        return temp;
    })();

for(k in data){
    var o = {};
    key = k.split('|');
    dims.forEach(function(e,i,a){
        o[e]=key[i];
    });
    o["values"]=data[k];
    result.push($.extend({},o));
}
return { "dims":dims, "data":result};
};